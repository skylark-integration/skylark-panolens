{"version":3,"sources":["lib/controls/OrbitControls.js"],"names":["define","THREE","OrbitControls","object","domElement","this","undefined","document","frameId","enabled","target","Vector3","center","noZoom","zoomSpeed","minDistance","maxDistance","Infinity","minZoom","maxZoom","noRotate","rotateSpeed","noPan","keyPanSpeed","autoRotate","autoRotateSpeed","minPolarAngle","maxPolarAngle","Math","PI","momentumDampingFactor","momentumScalingFactor","momentumKeydownFactor","minFov","maxFov","minAzimuthAngle","maxAzimuthAngle","noKeys","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","ORBIT","MOUSE","ZOOM","MIDDLE","PAN","eventPrevious","keyUp","keyBottom","keyLeft","keyRight","scope","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","panOffset","offset","dollyStart","dollyEnd","dollyDelta","theta","phi","phiDelta","thetaDelta","scale","pan","lastPosition","lastQuaternion","Quaternion","momentumLeft","momentumUp","momentumOn","STATE","NONE","ROTATE","DOLLY","TOUCH_ROTATE","TOUCH_DOLLY","TOUCH_PAN","state","target0","clone","position0","position","zoom0","zoom","quat","setFromUnitVectors","up","quatInverse","inverse","changeEvent","type","startEvent","endEvent","getAutoRotationAngle","getZoomScale","pow","onMouseDown","event","preventDefault","button","set","clientX","clientY","addEventListener","onMouseMove","onMouseUp","dispatchEvent","update","element","body","subVectors","rotateLeft","x","clientWidth","rotateUp","y","clientHeight","copy","dollyIn","dollyOut","removeEventListener","onMouseWheel","stopPropagation","delta","wheelDelta","detail","fov","updateProjectionMatrix","onKeyUp","keyCode","onKeyDown","touchstart","touches","length","pageX","pageY","dx","dy","distance","sqrt","touchmove","touchend","setLastQuaternion","quaternion","getLastPosition","angle","panLeft","te","matrix","elements","multiplyScalar","add","panUp","deltaX","deltaY","PerspectiveCamera","targetDistance","sub","tan","OrthographicCamera","right","left","top","bottom","console","warn","momentum","abs","dollyScale","max","min","ignoreUpdate","applyQuaternion","atan2","z","radius","sin","cos","lookAt","distanceToSquared","dot","reset","getPolarAngle","getAzimuthalAngle","dispose","window","passive","prototype","Object","assign","create","EventDispatcher","constructor"],"mappings":"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","file":"../../../lib/controls/OrbitControls.js","sourcesContent":["define(['skylark-threejs'], function (THREE) {\n    'use strict';\n    function OrbitControls(object, domElement) {\n        this.object = object;\n        this.domElement = domElement !== undefined ? domElement : document;\n        this.frameId = null;\n        this.enabled = true;\n        this.target = new THREE.Vector3();\n        this.center = this.target;\n        this.noZoom = false;\n        this.zoomSpeed = 1;\n        this.minDistance = 0;\n        this.maxDistance = Infinity;\n        this.minZoom = 0;\n        this.maxZoom = Infinity;\n        this.noRotate = false;\n        this.rotateSpeed = -0.15;\n        this.noPan = true;\n        this.keyPanSpeed = 7;\n        this.autoRotate = false;\n        this.autoRotateSpeed = 2;\n        this.minPolarAngle = 0;\n        this.maxPolarAngle = Math.PI;\n        this.momentumDampingFactor = 0.9;\n        this.momentumScalingFactor = -0.005;\n        this.momentumKeydownFactor = 20;\n        this.minFov = 30;\n        this.maxFov = 120;\n        this.minAzimuthAngle = -Infinity;\n        this.maxAzimuthAngle = Infinity;\n        this.noKeys = false;\n        this.keys = {\n            LEFT: 37,\n            UP: 38,\n            RIGHT: 39,\n            BOTTOM: 40\n        };\n        this.mouseButtons = {\n            ORBIT: THREE.MOUSE.LEFT,\n            ZOOM: THREE.MOUSE.MIDDLE,\n            PAN: THREE.MOUSE.RIGHT\n        };\n        var scope = this;\n        var EPS = 1e-7;\n        var MEPS = 0.0001;\n        var rotateStart = new THREE.Vector2();\n        var rotateEnd = new THREE.Vector2();\n        var rotateDelta = new THREE.Vector2();\n        var panStart = new THREE.Vector2();\n        var panEnd = new THREE.Vector2();\n        var panDelta = new THREE.Vector2();\n        var panOffset = new THREE.Vector3();\n        var offset = new THREE.Vector3();\n        var dollyStart = new THREE.Vector2();\n        var dollyEnd = new THREE.Vector2();\n        var dollyDelta = new THREE.Vector2();\n        var theta = 0;\n        var phi = 0;\n        var phiDelta = 0;\n        var thetaDelta = 0;\n        var scale = 1;\n        var pan = new THREE.Vector3();\n        var lastPosition = new THREE.Vector3();\n        var lastQuaternion = new THREE.Quaternion();\n        var momentumLeft = 0, momentumUp = 0;\n        var eventPrevious;\n        var momentumOn = false;\n        var keyUp, keyBottom, keyLeft, keyRight;\n        var STATE = {\n            NONE: -1,\n            ROTATE: 0,\n            DOLLY: 1,\n            PAN: 2,\n            TOUCH_ROTATE: 3,\n            TOUCH_DOLLY: 4,\n            TOUCH_PAN: 5\n        };\n        var state = STATE.NONE;\n        this.target0 = this.target.clone();\n        this.position0 = this.object.position.clone();\n        this.zoom0 = this.object.zoom;\n        var quat = new THREE.Quaternion().setFromUnitVectors(object.up, new THREE.Vector3(0, 1, 0));\n        var quatInverse = quat.clone().inverse();\n        var changeEvent = { type: 'change' };\n        var startEvent = { type: 'start' };\n        var endEvent = { type: 'end' };\n        this.setLastQuaternion = function (quaternion) {\n            lastQuaternion.copy(quaternion);\n            scope.object.quaternion.copy(quaternion);\n        };\n        this.getLastPosition = function () {\n            return lastPosition;\n        };\n        this.rotateLeft = function (angle) {\n            if (angle === undefined) {\n                angle = getAutoRotationAngle();\n            }\n            thetaDelta -= angle;\n        };\n        this.rotateUp = function (angle) {\n            if (angle === undefined) {\n                angle = getAutoRotationAngle();\n            }\n            phiDelta -= angle;\n        };\n        this.panLeft = function (distance) {\n            var te = this.object.matrix.elements;\n            panOffset.set(te[0], te[1], te[2]);\n            panOffset.multiplyScalar(-distance);\n            pan.add(panOffset);\n        };\n        this.panUp = function (distance) {\n            var te = this.object.matrix.elements;\n            panOffset.set(te[4], te[5], te[6]);\n            panOffset.multiplyScalar(distance);\n            pan.add(panOffset);\n        };\n        this.pan = function (deltaX, deltaY) {\n            var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n            if (scope.object instanceof THREE.PerspectiveCamera) {\n                var position = scope.object.position;\n                var offset = position.clone().sub(scope.target);\n                var targetDistance = offset.length();\n                targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180);\n                scope.panLeft(2 * deltaX * targetDistance / element.clientHeight);\n                scope.panUp(2 * deltaY * targetDistance / element.clientHeight);\n            } else if (scope.object instanceof THREE.OrthographicCamera) {\n                scope.panLeft(deltaX * (scope.object.right - scope.object.left) / element.clientWidth);\n                scope.panUp(deltaY * (scope.object.top - scope.object.bottom) / element.clientHeight);\n            } else {\n                console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n            }\n        };\n        this.momentum = function () {\n            if (!momentumOn)\n                return;\n            if (Math.abs(momentumLeft) < MEPS && Math.abs(momentumUp) < MEPS) {\n                momentumOn = false;\n                return;\n            }\n            momentumUp *= this.momentumDampingFactor;\n            momentumLeft *= this.momentumDampingFactor;\n            thetaDelta -= this.momentumScalingFactor * momentumLeft;\n            phiDelta -= this.momentumScalingFactor * momentumUp;\n        };\n        this.dollyIn = function (dollyScale) {\n            if (dollyScale === undefined) {\n                dollyScale = getZoomScale();\n            }\n            if (scope.object instanceof THREE.PerspectiveCamera) {\n                scale /= dollyScale;\n            } else if (scope.object instanceof THREE.OrthographicCamera) {\n                scope.object.zoom = Math.max(this.minZoom, Math.min(this.maxZoom, this.object.zoom * dollyScale));\n                scope.object.updateProjectionMatrix();\n                scope.dispatchEvent(changeEvent);\n            } else {\n                console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n            }\n        };\n        this.dollyOut = function (dollyScale) {\n            if (dollyScale === undefined) {\n                dollyScale = getZoomScale();\n            }\n            if (scope.object instanceof THREE.PerspectiveCamera) {\n                scale *= dollyScale;\n            } else if (scope.object instanceof THREE.OrthographicCamera) {\n                scope.object.zoom = Math.max(this.minZoom, Math.min(this.maxZoom, this.object.zoom / dollyScale));\n                scope.object.updateProjectionMatrix();\n                scope.dispatchEvent(changeEvent);\n            } else {\n                console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n            }\n        };\n        this.update = function (ignoreUpdate) {\n            var position = this.object.position;\n            offset.copy(position).sub(this.target);\n            offset.applyQuaternion(quat);\n            theta = Math.atan2(offset.x, offset.z);\n            phi = Math.atan2(Math.sqrt(offset.x * offset.x + offset.z * offset.z), offset.y);\n            if (this.autoRotate && state === STATE.NONE) {\n                this.rotateLeft(getAutoRotationAngle());\n            }\n            this.momentum();\n            theta += thetaDelta;\n            phi += phiDelta;\n            theta = Math.max(this.minAzimuthAngle, Math.min(this.maxAzimuthAngle, theta));\n            phi = Math.max(this.minPolarAngle, Math.min(this.maxPolarAngle, phi));\n            phi = Math.max(EPS, Math.min(Math.PI - EPS, phi));\n            var radius = offset.length() * scale;\n            radius = Math.max(this.minDistance, Math.min(this.maxDistance, radius));\n            this.target.add(pan);\n            offset.x = radius * Math.sin(phi) * Math.sin(theta);\n            offset.y = radius * Math.cos(phi);\n            offset.z = radius * Math.sin(phi) * Math.cos(theta);\n            offset.applyQuaternion(quatInverse);\n            position.copy(this.target).add(offset);\n            this.object.lookAt(this.target);\n            thetaDelta = 0;\n            phiDelta = 0;\n            scale = 1;\n            pan.set(0, 0, 0);\n            if (lastPosition.distanceToSquared(this.object.position) > EPS || 8 * (1 - lastQuaternion.dot(this.object.quaternion)) > EPS) {\n                if (ignoreUpdate !== true) {\n                    this.dispatchEvent(changeEvent);\n                }\n                lastPosition.copy(this.object.position);\n                lastQuaternion.copy(this.object.quaternion);\n            }\n        };\n        this.reset = function () {\n            state = STATE.NONE;\n            this.target.copy(this.target0);\n            this.object.position.copy(this.position0);\n            this.object.zoom = this.zoom0;\n            this.object.updateProjectionMatrix();\n            this.dispatchEvent(changeEvent);\n            this.update();\n        };\n        this.getPolarAngle = function () {\n            return phi;\n        };\n        this.getAzimuthalAngle = function () {\n            return theta;\n        };\n        function getAutoRotationAngle() {\n            return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n        }\n        function getZoomScale() {\n            return Math.pow(0.95, scope.zoomSpeed);\n        }\n        function onMouseDown(event) {\n            momentumOn = false;\n            momentumLeft = momentumUp = 0;\n            if (scope.enabled === false)\n                return;\n            event.preventDefault();\n            if (event.button === scope.mouseButtons.ORBIT) {\n                if (scope.noRotate === true)\n                    return;\n                state = STATE.ROTATE;\n                rotateStart.set(event.clientX, event.clientY);\n            } else if (event.button === scope.mouseButtons.ZOOM) {\n                if (scope.noZoom === true)\n                    return;\n                state = STATE.DOLLY;\n                dollyStart.set(event.clientX, event.clientY);\n            } else if (event.button === scope.mouseButtons.PAN) {\n                if (scope.noPan === true)\n                    return;\n                state = STATE.PAN;\n                panStart.set(event.clientX, event.clientY);\n            }\n            if (state !== STATE.NONE) {\n                document.addEventListener('mousemove', onMouseMove, false);\n                document.addEventListener('mouseup', onMouseUp, false);\n                scope.dispatchEvent(startEvent);\n            }\n            scope.update();\n        }\n        function onMouseMove(event) {\n            if (scope.enabled === false)\n                return;\n            event.preventDefault();\n            var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n            if (state === STATE.ROTATE) {\n                if (scope.noRotate === true)\n                    return;\n                rotateEnd.set(event.clientX, event.clientY);\n                rotateDelta.subVectors(rotateEnd, rotateStart);\n                scope.rotateLeft(2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed);\n                scope.rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed);\n                rotateStart.copy(rotateEnd);\n                if (eventPrevious) {\n                    momentumLeft = event.clientX - eventPrevious.clientX;\n                    momentumUp = event.clientY - eventPrevious.clientY;\n                }\n                eventPrevious = event;\n            } else if (state === STATE.DOLLY) {\n                if (scope.noZoom === true)\n                    return;\n                dollyEnd.set(event.clientX, event.clientY);\n                dollyDelta.subVectors(dollyEnd, dollyStart);\n                if (dollyDelta.y > 0) {\n                    scope.dollyIn();\n                } else if (dollyDelta.y < 0) {\n                    scope.dollyOut();\n                }\n                dollyStart.copy(dollyEnd);\n            } else if (state === STATE.PAN) {\n                if (scope.noPan === true)\n                    return;\n                panEnd.set(event.clientX, event.clientY);\n                panDelta.subVectors(panEnd, panStart);\n                scope.pan(panDelta.x, panDelta.y);\n                panStart.copy(panEnd);\n            }\n            if (state !== STATE.NONE)\n                scope.update();\n        }\n        function onMouseUp() {\n            momentumOn = true;\n            eventPrevious = undefined;\n            if (scope.enabled === false)\n                return;\n            document.removeEventListener('mousemove', onMouseMove, false);\n            document.removeEventListener('mouseup', onMouseUp, false);\n            scope.dispatchEvent(endEvent);\n            state = STATE.NONE;\n        }\n        function onMouseWheel(event) {\n            if (scope.enabled === false || scope.noZoom === true || state !== STATE.NONE)\n                return;\n            event.preventDefault();\n            event.stopPropagation();\n            var delta = 0;\n            if (event.wheelDelta !== undefined) {\n                delta = event.wheelDelta;\n            } else if (event.detail !== undefined) {\n                delta = -event.detail;\n            }\n            if (delta > 0) {\n                scope.object.fov = scope.object.fov < scope.maxFov ? scope.object.fov + 1 : scope.maxFov;\n                scope.object.updateProjectionMatrix();\n            } else if (delta < 0) {\n                scope.object.fov = scope.object.fov > scope.minFov ? scope.object.fov - 1 : scope.minFov;\n                scope.object.updateProjectionMatrix();\n            }\n            scope.update();\n            scope.dispatchEvent(changeEvent);\n            scope.dispatchEvent(startEvent);\n            scope.dispatchEvent(endEvent);\n        }\n        function onKeyUp(event) {\n            switch (event.keyCode) {\n            case scope.keys.UP:\n                keyUp = false;\n                break;\n            case scope.keys.BOTTOM:\n                keyBottom = false;\n                break;\n            case scope.keys.LEFT:\n                keyLeft = false;\n                break;\n            case scope.keys.RIGHT:\n                keyRight = false;\n                break;\n            }\n        }\n        function onKeyDown(event) {\n            if (scope.enabled === false || scope.noKeys === true || scope.noRotate === true)\n                return;\n            switch (event.keyCode) {\n            case scope.keys.UP:\n                keyUp = true;\n                break;\n            case scope.keys.BOTTOM:\n                keyBottom = true;\n                break;\n            case scope.keys.LEFT:\n                keyLeft = true;\n                break;\n            case scope.keys.RIGHT:\n                keyRight = true;\n                break;\n            }\n            if (keyUp || keyBottom || keyLeft || keyRight) {\n                momentumOn = true;\n                if (keyUp)\n                    momentumUp = -scope.rotateSpeed * scope.momentumKeydownFactor;\n                if (keyBottom)\n                    momentumUp = scope.rotateSpeed * scope.momentumKeydownFactor;\n                if (keyLeft)\n                    momentumLeft = -scope.rotateSpeed * scope.momentumKeydownFactor;\n                if (keyRight)\n                    momentumLeft = scope.rotateSpeed * scope.momentumKeydownFactor;\n            }\n        }\n        function touchstart(event) {\n            momentumOn = false;\n            momentumLeft = momentumUp = 0;\n            if (scope.enabled === false)\n                return;\n            switch (event.touches.length) {\n            case 1:\n                if (scope.noRotate === true)\n                    return;\n                state = STATE.TOUCH_ROTATE;\n                rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n                break;\n            case 2:\n                if (scope.noZoom === true)\n                    return;\n                state = STATE.TOUCH_DOLLY;\n                var dx = event.touches[0].pageX - event.touches[1].pageX;\n                var dy = event.touches[0].pageY - event.touches[1].pageY;\n                var distance = Math.sqrt(dx * dx + dy * dy);\n                dollyStart.set(0, distance);\n                break;\n            case 3:\n                if (scope.noPan === true)\n                    return;\n                state = STATE.TOUCH_PAN;\n                panStart.set(event.touches[0].pageX, event.touches[0].pageY);\n                break;\n            default:\n                state = STATE.NONE;\n            }\n            if (state !== STATE.NONE)\n                scope.dispatchEvent(startEvent);\n        }\n        function touchmove(event) {\n            if (scope.enabled === false)\n                return;\n            event.preventDefault();\n            event.stopPropagation();\n            var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n            switch (event.touches.length) {\n            case 1:\n                if (scope.noRotate === true)\n                    return;\n                if (state !== STATE.TOUCH_ROTATE)\n                    return;\n                rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n                rotateDelta.subVectors(rotateEnd, rotateStart);\n                scope.rotateLeft(2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed);\n                scope.rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed);\n                rotateStart.copy(rotateEnd);\n                if (eventPrevious) {\n                    momentumLeft = event.touches[0].pageX - eventPrevious.pageX;\n                    momentumUp = event.touches[0].pageY - eventPrevious.pageY;\n                }\n                eventPrevious = {\n                    pageX: event.touches[0].pageX,\n                    pageY: event.touches[0].pageY\n                };\n                scope.update();\n                break;\n            case 2:\n                if (scope.noZoom === true)\n                    return;\n                if (state !== STATE.TOUCH_DOLLY)\n                    return;\n                var dx = event.touches[0].pageX - event.touches[1].pageX;\n                var dy = event.touches[0].pageY - event.touches[1].pageY;\n                var distance = Math.sqrt(dx * dx + dy * dy);\n                dollyEnd.set(0, distance);\n                dollyDelta.subVectors(dollyEnd, dollyStart);\n                if (dollyDelta.y < 0) {\n                    scope.object.fov = scope.object.fov < scope.maxFov ? scope.object.fov + 1 : scope.maxFov;\n                    scope.object.updateProjectionMatrix();\n                } else if (dollyDelta.y > 0) {\n                    scope.object.fov = scope.object.fov > scope.minFov ? scope.object.fov - 1 : scope.minFov;\n                    scope.object.updateProjectionMatrix();\n                }\n                dollyStart.copy(dollyEnd);\n                scope.update();\n                scope.dispatchEvent(changeEvent);\n                break;\n            case 3:\n                if (scope.noPan === true)\n                    return;\n                if (state !== STATE.TOUCH_PAN)\n                    return;\n                panEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n                panDelta.subVectors(panEnd, panStart);\n                scope.pan(panDelta.x, panDelta.y);\n                panStart.copy(panEnd);\n                scope.update();\n                break;\n            default:\n                state = STATE.NONE;\n            }\n        }\n        function touchend() {\n            momentumOn = true;\n            eventPrevious = undefined;\n            if (scope.enabled === false)\n                return;\n            scope.dispatchEvent(endEvent);\n            state = STATE.NONE;\n        }\n        this.dispose = function () {\n            this.domElement.removeEventListener('mousedown', onMouseDown);\n            this.domElement.removeEventListener('mousewheel', onMouseWheel);\n            this.domElement.removeEventListener('DOMMouseScroll', onMouseWheel);\n            this.domElement.removeEventListener('touchstart', touchstart);\n            this.domElement.removeEventListener('touchend', touchend);\n            this.domElement.removeEventListener('touchmove', touchmove);\n            window.removeEventListener('keyup', onKeyUp);\n            window.removeEventListener('keydown', onKeyDown);\n        };\n        this.domElement.addEventListener('mousedown', onMouseDown, { passive: false });\n        this.domElement.addEventListener('mousewheel', onMouseWheel, { passive: false });\n        this.domElement.addEventListener('DOMMouseScroll', onMouseWheel, { passive: false });\n        this.domElement.addEventListener('touchstart', touchstart, { passive: false });\n        this.domElement.addEventListener('touchend', touchend, { passive: false });\n        this.domElement.addEventListener('touchmove', touchmove, { passive: false });\n        window.addEventListener('keyup', onKeyUp, { passive: false });\n        window.addEventListener('keydown', onKeyDown, { passive: false });\n        this.update();\n    }\n    ;\n    OrbitControls.prototype = Object.assign(Object.create(THREE.EventDispatcher.prototype), { constructor: OrbitControls });\n    return OrbitControls;\n});"]}