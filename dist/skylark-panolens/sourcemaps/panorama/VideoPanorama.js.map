{"version":3,"sources":["panorama/VideoPanorama.js"],"names":["define","Panorama","THREE","VideoPanorama","src","options","geometry","SphereBufferGeometry","material","MeshBasicMaterial","opacity","transparent","call","this","videoElement","document","createElement","loop","muted","autoplay","playsinline","crossOrigin","Object","assign","videoProgress","radius","addEventListener","pauseVideo","bind","resumeVideoProgress","toggleVideo","setVideoCurrentTime","prototype","create","constructor","isMobile","check","a","window","navigator","userAgent","vendor","opera","test","substr","load","video","onProgress","onLoad","setAttribute","onloadeddata","setVideoTexture","dispatchEvent","type","method","data","pause","requestAnimationFrame","map","needsUpdate","loaded","total","readyState","querySelectorAll","length","source","appendChild","duration","currentTime","resetVideo","videoTexture","VideoTexture","minFilter","LinearFilter","magFilter","format","RGBFormat","updateTexture","reset","undefined","isVideoPaused","paused","percentage","Number","isNaN","playVideo","onSuccess","onError","error","play","then","catch","isVideoMuted","muteVideo","unmuteVideo","getVideoElement","dispose","removeEventListener"],"mappings":"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","file":"../../panorama/VideoPanorama.js","sourcesContent":["define([\n    './Panorama',\n    'skylark-threejs'\n], function (Panorama, THREE) {\n    'use strict';\n    function VideoPanorama(src, options = {}) {\n        const radius = 5000;\n        const geometry = new THREE.SphereBufferGeometry(radius, 60, 40);\n        const material = new THREE.MeshBasicMaterial({\n            opacity: 0,\n            transparent: true\n        });\n        Panorama.call(this, geometry, material);\n        this.src = src;\n        this.options = {\n            videoElement: document.createElement('video'),\n            loop: true,\n            muted: true,\n            autoplay: false,\n            playsinline: true,\n            crossOrigin: 'anonymous'\n        };\n        Object.assign(this.options, options);\n        this.videoElement = this.options.videoElement;\n        this.videoProgress = 0;\n        this.radius = radius;\n        this.addEventListener('leave', this.pauseVideo.bind(this));\n        this.addEventListener('enter-fade-start', this.resumeVideoProgress.bind(this));\n        this.addEventListener('video-toggle', this.toggleVideo.bind(this));\n        this.addEventListener('video-time', this.setVideoCurrentTime.bind(this));\n    }\n    ;\n    VideoPanorama.prototype = Object.assign(Object.create(Panorama.prototype), {\n        constructor: VideoPanorama,\n        isMobile: function () {\n            let check = false;\n            (function (a) {\n                if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4)))\n                    check = true;\n            }(window.navigator.userAgent || window.navigator.vendor || window.opera));\n            return check;\n        },\n        load: function () {\n            const {muted, loop, autoplay, playsinline, crossOrigin} = this.options;\n            const video = this.videoElement;\n            const material = this.material;\n            const onProgress = this.onProgress.bind(this);\n            const onLoad = this.onLoad.bind(this);\n            video.loop = loop;\n            video.autoplay = autoplay;\n            video.playsinline = playsinline;\n            video.crossOrigin = crossOrigin;\n            video.muted = muted;\n            if (playsinline) {\n                video.setAttribute('playsinline', '');\n                video.setAttribute('webkit-playsinline', '');\n            }\n            const onloadeddata = function () {\n                this.setVideoTexture(video);\n                if (autoplay) {\n                    this.dispatchEvent({\n                        type: 'panolens-viewer-handler',\n                        method: 'updateVideoPlayButton',\n                        data: false\n                    });\n                }\n                if (this.isMobile()) {\n                    video.pause();\n                    if (autoplay && muted) {\n                        this.dispatchEvent({\n                            type: 'panolens-viewer-handler',\n                            method: 'updateVideoPlayButton',\n                            data: false\n                        });\n                    } else {\n                        this.dispatchEvent({\n                            type: 'panolens-viewer-handler',\n                            method: 'updateVideoPlayButton',\n                            data: true\n                        });\n                    }\n                }\n                const loaded = () => {\n                    material.map.needsUpdate = true;\n                    onProgress({\n                        loaded: 1,\n                        total: 1\n                    });\n                    onLoad();\n                };\n                window.requestAnimationFrame(loaded);\n            };\n            if (video.readyState > 2) {\n                onloadeddata.call(this);\n            } else {\n                if (video.querySelectorAll('source').length === 0) {\n                    const source = document.createElement('source');\n                    source.src = this.src;\n                    video.appendChild(source);\n                }\n                video.load();\n            }\n            video.addEventListener('loadeddata', onloadeddata.bind(this));\n            video.addEventListener('timeupdate', function () {\n                this.videoProgress = video.duration >= 0 ? video.currentTime / video.duration : 0;\n                this.dispatchEvent({\n                    type: 'panolens-viewer-handler',\n                    method: 'onVideoUpdate',\n                    data: this.videoProgress\n                });\n            }.bind(this));\n            video.addEventListener('ended', function () {\n                if (!loop) {\n                    this.resetVideo();\n                    this.dispatchEvent({\n                        type: 'panolens-viewer-handler',\n                        method: 'updateVideoPlayButton',\n                        data: true\n                    });\n                }\n            }.bind(this), false);\n        },\n        setVideoTexture: function (video) {\n            if (!video)\n                return;\n            const videoTexture = new THREE.VideoTexture(video);\n            videoTexture.minFilter = THREE.LinearFilter;\n            videoTexture.magFilter = THREE.LinearFilter;\n            videoTexture.format = THREE.RGBFormat;\n            this.updateTexture(videoTexture);\n        },\n        reset: function () {\n            this.videoElement = undefined;\n            Panorama.prototype.reset.call(this);\n        },\n        isVideoPaused: function () {\n            return this.videoElement.paused;\n        },\n        toggleVideo: function () {\n            const video = this.videoElement;\n            if (!video) {\n                return;\n            }\n            video[video.paused ? 'play' : 'pause']();\n        },\n        setVideoCurrentTime: function ({percentage}) {\n            const video = this.videoElement;\n            if (video && !Number.isNaN(percentage) && percentage !== 1) {\n                video.currentTime = video.duration * percentage;\n                this.dispatchEvent({\n                    type: 'panolens-viewer-handler',\n                    method: 'onVideoUpdate',\n                    data: percentage\n                });\n            }\n        },\n        playVideo: function () {\n            const video = this.videoElement;\n            const playVideo = this.playVideo.bind(this);\n            const dispatchEvent = this.dispatchEvent.bind(this);\n            const onSuccess = () => {\n                dispatchEvent({ type: 'play' });\n            };\n            const onError = error => {\n                window.requestAnimationFrame(playVideo);\n                dispatchEvent({\n                    type: 'play-error',\n                    error\n                });\n            };\n            if (video && video.paused) {\n                video.play().then(onSuccess).catch(onError);\n            }\n        },\n        pauseVideo: function () {\n            const video = this.videoElement;\n            if (video && !video.paused) {\n                video.pause();\n            }\n            this.dispatchEvent({ type: 'pause' });\n        },\n        resumeVideoProgress: function () {\n            const video = this.videoElement;\n            if (video.readyState >= 4 && video.autoplay && !this.isMobile()) {\n                this.playVideo();\n                this.dispatchEvent({\n                    type: 'panolens-viewer-handler',\n                    method: 'updateVideoPlayButton',\n                    data: false\n                });\n            } else {\n                this.pauseVideo();\n                this.dispatchEvent({\n                    type: 'panolens-viewer-handler',\n                    method: 'updateVideoPlayButton',\n                    data: true\n                });\n            }\n            this.setVideoCurrentTime({ percentage: this.videoProgress });\n        },\n        resetVideo: function () {\n            const video = this.videoElement;\n            if (video) {\n                this.setVideoCurrentTime({ percentage: 0 });\n            }\n        },\n        isVideoMuted: function () {\n            return this.videoElement.muted;\n        },\n        muteVideo: function () {\n            const video = this.videoElement;\n            if (video && !video.muted) {\n                video.muted = true;\n            }\n            this.dispatchEvent({ type: 'volumechange' });\n        },\n        unmuteVideo: function () {\n            const video = this.videoElement;\n            if (video && this.isVideoMuted()) {\n                video.muted = false;\n            }\n            this.dispatchEvent({ type: 'volumechange' });\n        },\n        getVideoElement: function () {\n            return this.videoElement;\n        },\n        dispose: function () {\n            const {\n                material: {map}\n            } = this;\n            this.pauseVideo();\n            this.removeEventListener('leave', this.pauseVideo.bind(this));\n            this.removeEventListener('enter-fade-start', this.resumeVideoProgress.bind(this));\n            this.removeEventListener('video-toggle', this.toggleVideo.bind(this));\n            this.removeEventListener('video-time', this.setVideoCurrentTime.bind(this));\n            if (map) {\n                map.dispose();\n            }\n            Panorama.prototype.dispose.call(this);\n        }\n    });\n    return VideoPanorama;\n});"]}