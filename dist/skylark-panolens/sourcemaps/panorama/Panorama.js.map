{"version":3,"sources":["panorama/Panorama.js"],"names":["define","Infospot","DataImage","THREE","TWEEN","Panorama","geometry","material","Mesh","call","this","type","ImageQualityLow","ImageQualityFair","ImageQualityMedium","ImageQualityHigh","ImageQualitySuperHigh","animationDuration","defaultInfospotSize","container","undefined","loaded","linkedSpots","isInfospotVisible","linkingImageURL","linkingImageScale","side","BackSide","opacity","scale","x","renderOrder","active","infospotAnimation","Tween","to","addEventListener","fadeIn","bind","setContainer","onClick","setupTransitions","prototype","Object","assign","create","constructor","add","object","invertedObject","arguments","length","i","dispatchEvent","method","vector","duration","easing","data","Object3D","scalePlaceHolder","load","onLoad","event","intersects","traverse","HTMLElement","children","forEach","child","onProgress","progress","onError","getZoomLevel","zoomLevel","window","innerWidth","updateTexture","texture","map","needsUpdate","toggleInfospotVisibility","isVisible","delay","visible","show","hide","onComplete","start","setLinkingImage","url","link","pano","position","imageScale","imageSrc","img","console","warn","Arrow","spot","copy","toPanorama","push","reset","fadeInAnimation","Easing","Quartic","Out","onStart","fadeOutAnimation","enterTransition","leaveTransition","onFadeAnimationUpdate","alpha","uniforms","value","stop","onUpdate","fadeOut","onEnter","onLeave","dispose","recursiveDispose","remove","parent"],"mappings":"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","file":"../../panorama/Panorama.js","sourcesContent":["define([\n    '../infospot/Infospot',\n    '../DataImage',\n    'skylark-threejs',\n    'skylark-tweenjs'\n], function (Infospot, DataImage, THREE, TWEEN) {\n    'use strict';\n    function Panorama(geometry, material) {\n        THREE.Mesh.call(this, geometry, material);\n        this.type = 'panorama';\n        this.ImageQualityLow = 1;\n        this.ImageQualityFair = 2;\n        this.ImageQualityMedium = 3;\n        this.ImageQualityHigh = 4;\n        this.ImageQualitySuperHigh = 5;\n        this.animationDuration = 1000;\n        this.defaultInfospotSize = 350;\n        this.container = undefined;\n        this.loaded = false;\n        this.linkedSpots = [];\n        this.isInfospotVisible = false;\n        this.linkingImageURL = undefined;\n        this.linkingImageScale = undefined;\n        this.material.side = THREE.BackSide;\n        this.material.opacity = 0;\n        this.scale.x *= -1;\n        this.renderOrder = -1;\n        this.active = false;\n        this.infospotAnimation = new TWEEN.Tween(this).to({}, this.animationDuration / 2);\n        this.addEventListener('load', this.fadeIn.bind(this));\n        this.addEventListener('panolens-container', this.setContainer.bind(this));\n        this.addEventListener('click', this.onClick.bind(this));\n        this.setupTransitions();\n    }\n    Panorama.prototype = Object.assign(Object.create(THREE.Mesh.prototype), {\n        constructor: Panorama,\n        add: function (object) {\n            let invertedObject;\n            if (arguments.length > 1) {\n                for (var i = 0; i < arguments.length; i++) {\n                    this.add(arguments[i]);\n                }\n                return this;\n            }\n            if (object instanceof Infospot) {\n                invertedObject = object;\n                if (object.dispatchEvent) {\n                    const {container} = this;\n                    if (container) {\n                        object.dispatchEvent({\n                            type: 'panolens-container',\n                            container\n                        });\n                    }\n                    object.dispatchEvent({\n                        type: 'panolens-infospot-focus',\n                        method: function (vector, duration, easing) {\n                            this.dispatchEvent({\n                                type: 'panolens-viewer-handler',\n                                method: 'tweenControlCenter',\n                                data: [\n                                    vector,\n                                    duration,\n                                    easing\n                                ]\n                            });\n                        }.bind(this)\n                    });\n                }\n            } else {\n                invertedObject = new THREE.Object3D();\n                invertedObject.scale.x = -1;\n                invertedObject.scalePlaceHolder = true;\n                invertedObject.add(object);\n            }\n            THREE.Object3D.prototype.add.call(this, invertedObject);\n        },\n        load: function () {\n            this.onLoad();\n        },\n        onClick: function (event) {\n            if (event.intersects && event.intersects.length === 0) {\n                this.traverse(function (object) {\n                    object.dispatchEvent({ type: 'dismiss' });\n                });\n            }\n        },\n        setContainer: function (data) {\n            let container;\n            if (data instanceof HTMLElement) {\n                container = data;\n            } else if (data && data.container) {\n                container = data.container;\n            }\n            if (container) {\n                this.children.forEach(function (child) {\n                    if (child instanceof Infospot && child.dispatchEvent) {\n                        child.dispatchEvent({\n                            type: 'panolens-container',\n                            container: container\n                        });\n                    }\n                });\n                this.container = container;\n            }\n        },\n        onLoad: function () {\n            this.loaded = true;\n            this.dispatchEvent({ type: 'load' });\n        },\n        onProgress: function (progress) {\n            this.dispatchEvent({\n                type: 'progress',\n                progress: progress\n            });\n        },\n        onError: function () {\n            this.dispatchEvent({ type: 'error' });\n        },\n        getZoomLevel: function () {\n            let zoomLevel;\n            if (window.innerWidth <= 800) {\n                zoomLevel = this.ImageQualityFair;\n            } else if (window.innerWidth > 800 && window.innerWidth <= 1280) {\n                zoomLevel = this.ImageQualityMedium;\n            } else if (window.innerWidth > 1280 && window.innerWidth <= 1920) {\n                zoomLevel = this.ImageQualityHigh;\n            } else if (window.innerWidth > 1920) {\n                zoomLevel = this.ImageQualitySuperHigh;\n            } else {\n                zoomLevel = this.ImageQualityLow;\n            }\n            return zoomLevel;\n        },\n        updateTexture: function (texture) {\n            this.material.map = texture;\n            this.material.needsUpdate = true;\n        },\n        toggleInfospotVisibility: function (isVisible, delay) {\n            delay = delay !== undefined ? delay : 0;\n            const visible = isVisible !== undefined ? isVisible : this.isInfospotVisible ? false : true;\n            this.traverse(function (object) {\n                if (object instanceof Infospot) {\n                    if (visible) {\n                        object.show(delay);\n                    } else {\n                        object.hide(delay);\n                    }\n                }\n            });\n            this.isInfospotVisible = visible;\n            this.infospotAnimation.onComplete(function () {\n                this.dispatchEvent({\n                    type: 'infospot-animation-complete',\n                    visible: visible\n                });\n            }.bind(this)).delay(delay).start();\n        },\n        setLinkingImage: function (url, scale) {\n            this.linkingImageURL = url;\n            this.linkingImageScale = scale;\n        },\n        link: function (pano, position, imageScale, imageSrc) {\n            let scale, img;\n            this.visible = true;\n            if (!position) {\n                console.warn('Please specify infospot position for linking');\n                return;\n            }\n            if (imageScale !== undefined) {\n                scale = imageScale;\n            } else if (pano.linkingImageScale !== undefined) {\n                scale = pano.linkingImageScale;\n            } else {\n                scale = 300;\n            }\n            if (imageSrc) {\n                img = imageSrc;\n            } else if (pano.linkingImageURL) {\n                img = pano.linkingImageURL;\n            } else {\n                img = DataImage.Arrow;\n            }\n            const spot = new Infospot(scale, img);\n            spot.position.copy(position);\n            spot.toPanorama = pano;\n            spot.addEventListener('click', function () {\n                this.dispatchEvent({\n                    type: 'panolens-viewer-handler',\n                    method: 'setPanorama',\n                    data: pano\n                });\n            }.bind(this));\n            this.linkedSpots.push(spot);\n            this.add(spot);\n            this.visible = false;\n        },\n        reset: function () {\n            this.children.length = 0;\n        },\n        setupTransitions: function () {\n            this.fadeInAnimation = new TWEEN.Tween(this.material).easing(TWEEN.Easing.Quartic.Out).onStart(function () {\n                this.visible = true;\n                this.dispatchEvent({ type: 'enter-fade-start' });\n            }.bind(this));\n            this.fadeOutAnimation = new TWEEN.Tween(this.material).easing(TWEEN.Easing.Quartic.Out).onComplete(function () {\n                this.visible = false;\n                this.dispatchEvent({ type: 'leave-complete' });\n            }.bind(this));\n            this.enterTransition = new TWEEN.Tween(this).easing(TWEEN.Easing.Quartic.Out).onComplete(function () {\n                this.dispatchEvent({ type: 'enter-complete' });\n            }.bind(this)).start();\n            this.leaveTransition = new TWEEN.Tween(this).easing(TWEEN.Easing.Quartic.Out);\n        },\n        onFadeAnimationUpdate: function () {\n            const alpha = this.material.opacity;\n            const {uniforms} = this.material;\n            if (uniforms && uniforms.opacity) {\n                uniforms.opacity.value = alpha;\n            }\n        },\n        fadeIn: function (duration) {\n            duration = duration >= 0 ? duration : this.animationDuration;\n            this.fadeOutAnimation.stop();\n            this.fadeInAnimation.to({ opacity: 1 }, duration).onUpdate(this.onFadeAnimationUpdate.bind(this)).onComplete(function () {\n                this.toggleInfospotVisibility(true, duration / 2);\n                this.dispatchEvent({ type: 'enter-fade-complete' });\n            }.bind(this)).start();\n        },\n        fadeOut: function (duration) {\n            duration = duration >= 0 ? duration : this.animationDuration;\n            this.fadeInAnimation.stop();\n            this.fadeOutAnimation.to({ opacity: 0 }, duration).onUpdate(this.onFadeAnimationUpdate.bind(this)).start();\n        },\n        onEnter: function () {\n            const duration = this.animationDuration;\n            this.leaveTransition.stop();\n            this.enterTransition.to({}, duration).onStart(function () {\n                this.dispatchEvent({ type: 'enter-start' });\n                if (this.loaded) {\n                    this.fadeIn(duration);\n                } else {\n                    this.load();\n                }\n            }.bind(this)).start();\n            this.dispatchEvent({ type: 'enter' });\n            this.children.forEach(child => {\n                child.dispatchEvent({ type: 'panorama-enter' });\n            });\n            this.active = true;\n        },\n        onLeave: function () {\n            const duration = this.animationDuration;\n            this.enterTransition.stop();\n            this.leaveTransition.to({}, duration).onStart(function () {\n                this.dispatchEvent({ type: 'leave-start' });\n                this.fadeOut(duration);\n                this.toggleInfospotVisibility(false);\n            }.bind(this)).start();\n            this.dispatchEvent({ type: 'leave' });\n            this.children.forEach(child => {\n                child.dispatchEvent({ type: 'panorama-leave' });\n            });\n            this.active = false;\n        },\n        dispose: function () {\n            this.infospotAnimation.stop();\n            this.fadeInAnimation.stop();\n            this.fadeOutAnimation.stop();\n            this.enterTransition.stop();\n            this.leaveTransition.stop();\n            this.dispatchEvent({\n                type: 'panolens-viewer-handler',\n                method: 'onPanoramaDispose',\n                data: this\n            });\n            function recursiveDispose(object) {\n                const {geometry, material} = object;\n                for (var i = object.children.length - 1; i >= 0; i--) {\n                    recursiveDispose(object.children[i]);\n                    object.remove(object.children[i]);\n                }\n                if (object instanceof Infospot) {\n                    object.dispose();\n                }\n                if (geometry) {\n                    geometry.dispose();\n                    object.geometry = null;\n                }\n                if (material) {\n                    material.dispose();\n                    object.material = null;\n                }\n            }\n            recursiveDispose(this);\n            if (this.parent) {\n                this.parent.remove(this);\n            }\n        }\n    });\n    return Panorama;\n});"]}