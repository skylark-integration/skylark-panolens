{"version":3,"sources":["panorama/GoogleStreetviewPanorama.js"],"names":["define","ImagePanorama","GoogleStreetviewLoader","THREE","GoogleStreetviewPanorama","panoId","apiKey","call","this","gsvLoader","loadRequested","setupGoogleMapAPI","prototype","Object","assign","create","constructor","load","loadGSVLoader","script","document","createElement","src","onreadystatechange","setGSVLoader","bind","onload","querySelector","appendChild","getGSVLoader","onProgress","onPanoramaLoad","onLoad","setZoom","getZoomLevel","loaded","canvas","Texture","reset","undefined"],"mappings":";;;;;;;AAAAA,QACI,kBACA,oCACA,mBACD,SAAUC,EAAeC,EAAwBC,GAChD,aACA,SAASC,EAAyBC,EAAQC,GACtCL,EAAcM,KAAKC,MACnBA,KAAKH,OAASA,EACdG,KAAKC,UAAY,KACjBD,KAAKE,eAAgB,EACrBF,KAAKG,kBAAkBL,GA4C3B,OA1CAF,EAAyBQ,UAAYC,OAAOC,OAAOD,OAAOE,OAAOd,EAAcW,YAC3EI,YAAaZ,EACba,KAAM,SAAUZ,GACZG,KAAKE,eAAgB,GACrBL,EAASA,GAAUG,KAAKH,aACVG,KAAKC,WACfD,KAAKU,cAAcb,IAG3BM,kBAAmB,SAAUL,GACzB,MAAMa,EAASC,SAASC,cAAc,UACtCF,EAAOG,IAAM,2CACbH,EAAOG,KAAOhB,EAAS,OAASA,EAAS,GACzCa,EAAOI,mBAAqBf,KAAKgB,aAAaC,KAAKjB,MACnDW,EAAOO,OAASlB,KAAKgB,aAAaC,KAAKjB,MACvCY,SAASO,cAAc,QAAQC,YAAYT,IAE/CK,aAAc,WACVhB,KAAKC,UAAY,IAAIP,EACjBM,KAAKE,eACLF,KAAKS,QAGbY,aAAc,WACV,OAAOrB,KAAKC,WAEhBS,cAAe,SAAUb,GACrBG,KAAKE,eAAgB,EACrBF,KAAKC,UAAUqB,WAAatB,KAAKsB,WAAWL,KAAKjB,MACjDA,KAAKC,UAAUsB,eAAiBvB,KAAKwB,OAAOP,KAAKjB,MACjDA,KAAKC,UAAUwB,QAAQzB,KAAK0B,gBAC5B1B,KAAKC,UAAUQ,KAAKZ,GACpBG,KAAKC,UAAU0B,QAAS,GAE5BH,OAAQ,SAAUI,GACdnC,EAAcW,UAAUoB,OAAOzB,KAAKC,KAAM,IAAIL,EAAMkC,QAAQD,KAEhEE,MAAO,WACH9B,KAAKC,eAAY8B,EACjBtC,EAAcW,UAAU0B,MAAM/B,KAAKC,SAGpCJ","file":"../../panorama/GoogleStreetviewPanorama.js","sourcesContent":["define([\n    './ImagePanorama',\n    '../loaders/GoogleStreetviewLoader',\n    'skylark-threejs'\n], function (ImagePanorama, GoogleStreetviewLoader, THREE) {\n    'use strict';\n    function GoogleStreetviewPanorama(panoId, apiKey) {\n        ImagePanorama.call(this);\n        this.panoId = panoId;\n        this.gsvLoader = null;\n        this.loadRequested = false;\n        this.setupGoogleMapAPI(apiKey);\n    }\n    GoogleStreetviewPanorama.prototype = Object.assign(Object.create(ImagePanorama.prototype), {\n        constructor: GoogleStreetviewPanorama,\n        load: function (panoId) {\n            this.loadRequested = true;\n            panoId = panoId || this.panoId || {};\n            if (panoId && this.gsvLoader) {\n                this.loadGSVLoader(panoId);\n            }\n        },\n        setupGoogleMapAPI: function (apiKey) {\n            const script = document.createElement('script');\n            script.src = 'https://maps.googleapis.com/maps/api/js?';\n            script.src += apiKey ? 'key=' + apiKey : '';\n            script.onreadystatechange = this.setGSVLoader.bind(this);\n            script.onload = this.setGSVLoader.bind(this);\n            document.querySelector('head').appendChild(script);\n        },\n        setGSVLoader: function () {\n            this.gsvLoader = new GoogleStreetviewLoader();\n            if (this.loadRequested) {\n                this.load();\n            }\n        },\n        getGSVLoader: function () {\n            return this.gsvLoader;\n        },\n        loadGSVLoader: function (panoId) {\n            this.loadRequested = false;\n            this.gsvLoader.onProgress = this.onProgress.bind(this);\n            this.gsvLoader.onPanoramaLoad = this.onLoad.bind(this);\n            this.gsvLoader.setZoom(this.getZoomLevel());\n            this.gsvLoader.load(panoId);\n            this.gsvLoader.loaded = true;\n        },\n        onLoad: function (canvas) {\n            ImagePanorama.prototype.onLoad.call(this, new THREE.Texture(canvas));\n        },\n        reset: function () {\n            this.gsvLoader = undefined;\n            ImagePanorama.prototype.reset.call(this);\n        }\n    });\n    return GoogleStreetviewPanorama;\n});"]}