/**
 * skylark-panolens - A version of panolens that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-panolens/
 * @license MIT
 */
define(["skylark-threejs"],function(e){"use strict";function t(e){this.constraints=Object.assign({video:{width:{ideal:1920},height:{ideal:1080},facingMode:{exact:"environment"}},audio:!1},e),this.container=null,this.scene=null,this.element=null,this.devices=[],this.stream=null,this.ratioScalar=1,this.videoDeviceIndex=0}return t.prototype=Object.assign(Object.create(e.EventDispatcher.prototype),{setContainer:function(e){this.container=e},setScene:function(e){this.scene=e},enumerateDevices:function(){const e=this.devices,t=new Promise(t=>{t(e)});return e.length>0?t:window.navigator.mediaDevices.enumerateDevices()},switchNextVideoDevice:function(){const e=this.stop.bind(this),t=this.start.bind(this),i=this.setVideDeviceIndex.bind(this);let n=this.videoDeviceIndex;this.getDevices("video").then(s=>{e(),++n>=s.length?(i(0),n--):i(n),t(s[n])})},getDevices:function(e="video"){const t=this.devices;return this.enumerateDevices().then(e=>e.map(e=>(t.includes(e)||t.push(e),e))).then(t=>{const i=new RegExp(e,"i");return t.filter(e=>i.test(e.kind))})},getUserMedia:function(e){const t=this.setMediaStream.bind(this),i=this.playVideo.bind(this);return window.navigator.mediaDevices.getUserMedia(e).then(t).then(i).catch(e=>{console.warn(`PANOLENS.Media: ${e}`)})},setVideDeviceIndex:function(e){this.videoDeviceIndex=e},start:function(e){const t=this.constraints,i=this.getUserMedia.bind(this);return this.element=this.createVideoElement(),this.getDevices().then(n=>{if(!n||0===n.length)throw Error("no video device found");const s=e||n[0];return t.video.deviceId=s.deviceId,i(t)})},stop:function(){const e=this.stream;if(e&&e.active){e.getTracks()[0].stop(),window.removeEventListener("resize",this.onWindowResize.bind(this)),this.element=null,this.stream=null}},setMediaStream:function(e){this.stream=e,this.element.srcObject=e,this.scene&&(this.scene.background=this.createVideoTexture()),window.addEventListener("resize",this.onWindowResize.bind(this))},playVideo:function(){const{element:e}=this;e&&(e.play(),this.dispatchEvent({type:"play"}))},pauseVideo:function(){const{element:e}=this;e&&(e.pause(),this.dispatchEvent({type:"pause"}))},createVideoTexture:function(){const t=this.element,i=new e.VideoTexture(t);return i.generateMipmaps=!1,i.minFilter=e.LinearFilter,i.magFilter=e.LinearFilter,i.format=e.RGBFormat,i.center.set(.5,.5),t.addEventListener("canplay",this.onWindowResize.bind(this)),i},createVideoElement:function(){const e=this.dispatchEvent.bind(this),t=document.createElement("video");return t.setAttribute("autoplay",""),t.setAttribute("muted",""),t.setAttribute("playsinline",""),t.style.position="absolute",t.style.top="0",t.style.left="0",t.style.width="100%",t.style.height="100%",t.style.objectPosition="center",t.style.objectFit="cover",t.style.display=this.scene?"none":"",t.addEventListener("canplay",()=>e({type:"canplay"})),t},onWindowResize:function(){if(this.element&&this.element.videoWidth&&this.element.videoHeight&&this.scene){const{clientWidth:e,clientHeight:t}=this.container,i=this.scene.background,{videoWidth:n,videoHeight:s}=this.element,o=s/n*(this.container?e/t:1)*this.ratioScalar;e>t?i.repeat.set(o,1):i.repeat.set(1,1/o)}}}),t});
//# sourceMappingURL=../sourcemaps/media/Media.js.map
