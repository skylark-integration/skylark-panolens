/**
 * skylark-panolens - A version of panolens that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-panolens/
 * @license MIT
 */
define(["../infospot/Infospot","../DataImage","skylark-threejs","skylark-tweenjs"],function(t,i,n,e){"use strict";function s(t,i){n.Mesh.call(this,t,i),this.type="panorama",this.ImageQualityLow=1,this.ImageQualityFair=2,this.ImageQualityMedium=3,this.ImageQualityHigh=4,this.ImageQualitySuperHigh=5,this.animationDuration=1e3,this.defaultInfospotSize=350,this.container=void 0,this.loaded=!1,this.linkedSpots=[],this.isInfospotVisible=!1,this.linkingImageURL=void 0,this.linkingImageScale=void 0,this.material.side=n.BackSide,this.material.opacity=0,this.scale.x*=-1,this.renderOrder=-1,this.active=!1,this.infospotAnimation=new e.Tween(this).to({},this.animationDuration/2),this.addEventListener("load",this.fadeIn.bind(this)),this.addEventListener("panolens-container",this.setContainer.bind(this)),this.addEventListener("click",this.onClick.bind(this)),this.setupTransitions()}return s.prototype=Object.assign(Object.create(n.Mesh.prototype),{constructor:s,add:function(i){let e;if(arguments.length>1){for(var s=0;s<arguments.length;s++)this.add(arguments[s]);return this}if(i instanceof t){if(e=i,i.dispatchEvent){const{container:t}=this;t&&i.dispatchEvent({type:"panolens-container",container:t}),i.dispatchEvent({type:"panolens-infospot-focus",method:function(t,i,n){this.dispatchEvent({type:"panolens-viewer-handler",method:"tweenControlCenter",data:[t,i,n]})}.bind(this)})}}else(e=new n.Object3D).scale.x=-1,e.scalePlaceHolder=!0,e.add(i);n.Object3D.prototype.add.call(this,e)},load:function(){this.onLoad()},onClick:function(t){t.intersects&&0===t.intersects.length&&this.traverse(function(t){t.dispatchEvent({type:"dismiss"})})},setContainer:function(i){let n;i instanceof HTMLElement?n=i:i&&i.container&&(n=i.container),n&&(this.children.forEach(function(i){i instanceof t&&i.dispatchEvent&&i.dispatchEvent({type:"panolens-container",container:n})}),this.container=n)},onLoad:function(){this.loaded=!0,this.dispatchEvent({type:"load"})},onProgress:function(t){this.dispatchEvent({type:"progress",progress:t})},onError:function(){this.dispatchEvent({type:"error"})},getZoomLevel:function(){let t;return t=window.innerWidth<=800?this.ImageQualityFair:window.innerWidth>800&&window.innerWidth<=1280?this.ImageQualityMedium:window.innerWidth>1280&&window.innerWidth<=1920?this.ImageQualityHigh:window.innerWidth>1920?this.ImageQualitySuperHigh:this.ImageQualityLow},updateTexture:function(t){this.material.map=t,this.material.needsUpdate=!0},toggleInfospotVisibility:function(i,n){n=void 0!==n?n:0;const e=void 0!==i?i:!this.isInfospotVisible;this.traverse(function(i){i instanceof t&&(e?i.show(n):i.hide(n))}),this.isInfospotVisible=e,this.infospotAnimation.onComplete(function(){this.dispatchEvent({type:"infospot-animation-complete",visible:e})}.bind(this)).delay(n).start()},setLinkingImage:function(t,i){this.linkingImageURL=t,this.linkingImageScale=i},link:function(n,e,s,a){let o,h;if(this.visible=!0,!e)return void console.warn("Please specify infospot position for linking");o=void 0!==s?s:void 0!==n.linkingImageScale?n.linkingImageScale:300,h=a||(n.linkingImageURL?n.linkingImageURL:i.Arrow);const r=new t(o,h);r.position.copy(e),r.toPanorama=n,r.addEventListener("click",function(){this.dispatchEvent({type:"panolens-viewer-handler",method:"setPanorama",data:n})}.bind(this)),this.linkedSpots.push(r),this.add(r),this.visible=!1},reset:function(){this.children.length=0},setupTransitions:function(){this.fadeInAnimation=new e.Tween(this.material).easing(e.Easing.Quartic.Out).onStart(function(){this.visible=!0,this.dispatchEvent({type:"enter-fade-start"})}.bind(this)),this.fadeOutAnimation=new e.Tween(this.material).easing(e.Easing.Quartic.Out).onComplete(function(){this.visible=!1,this.dispatchEvent({type:"leave-complete"})}.bind(this)),this.enterTransition=new e.Tween(this).easing(e.Easing.Quartic.Out).onComplete(function(){this.dispatchEvent({type:"enter-complete"})}.bind(this)).start(),this.leaveTransition=new e.Tween(this).easing(e.Easing.Quartic.Out)},onFadeAnimationUpdate:function(){const t=this.material.opacity,{uniforms:i}=this.material;i&&i.opacity&&(i.opacity.value=t)},fadeIn:function(t){t=t>=0?t:this.animationDuration,this.fadeOutAnimation.stop(),this.fadeInAnimation.to({opacity:1},t).onUpdate(this.onFadeAnimationUpdate.bind(this)).onComplete(function(){this.toggleInfospotVisibility(!0,t/2),this.dispatchEvent({type:"enter-fade-complete"})}.bind(this)).start()},fadeOut:function(t){t=t>=0?t:this.animationDuration,this.fadeInAnimation.stop(),this.fadeOutAnimation.to({opacity:0},t).onUpdate(this.onFadeAnimationUpdate.bind(this)).start()},onEnter:function(){const t=this.animationDuration;this.leaveTransition.stop(),this.enterTransition.to({},t).onStart(function(){this.dispatchEvent({type:"enter-start"}),this.loaded?this.fadeIn(t):this.load()}.bind(this)).start(),this.dispatchEvent({type:"enter"}),this.children.forEach(t=>{t.dispatchEvent({type:"panorama-enter"})}),this.active=!0},onLeave:function(){const t=this.animationDuration;this.enterTransition.stop(),this.leaveTransition.to({},t).onStart(function(){this.dispatchEvent({type:"leave-start"}),this.fadeOut(t),this.toggleInfospotVisibility(!1)}.bind(this)).start(),this.dispatchEvent({type:"leave"}),this.children.forEach(t=>{t.dispatchEvent({type:"panorama-leave"})}),this.active=!1},dispose:function(){this.infospotAnimation.stop(),this.fadeInAnimation.stop(),this.fadeOutAnimation.stop(),this.enterTransition.stop(),this.leaveTransition.stop(),this.dispatchEvent({type:"panolens-viewer-handler",method:"onPanoramaDispose",data:this}),function i(n){const{geometry:e,material:s}=n;for(var a=n.children.length-1;a>=0;a--)i(n.children[a]),n.remove(n.children[a]);n instanceof t&&n.dispose(),e&&(e.dispose(),n.geometry=null),s&&(s.dispose(),n.material=null)}(this),this.parent&&this.parent.remove(this)}}),s});
//# sourceMappingURL=../sourcemaps/panorama/Panorama.js.map
