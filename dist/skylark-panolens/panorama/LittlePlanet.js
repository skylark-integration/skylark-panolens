/**
 * skylark-panolens - A version of panolens that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-panolens/
 * @license MIT
 */
define(["./ImagePanorama","../infospot/Infospot","../Constants","../shaders/StereographicShader","skylark-threejs"],function(e,t,i,n,s){"use strict";function o(t="image",i,n=1e4,o=.5){"image"===t&&e.call(this,i,this.createGeometry(n,o),this.createMaterial(n)),this.size=n,this.ratio=o,this.EPS=1e-6,this.frameId=null,this.dragging=!1,this.userMouse=new s.Vector2,this.quatA=new s.Quaternion,this.quatB=new s.Quaternion,this.quatCur=new s.Quaternion,this.quatSlerp=new s.Quaternion,this.vectorX=new s.Vector3(1,0,0),this.vectorY=new s.Vector3(0,1,0),this.addEventListener("window-resize",this.onWindowResize)}return o.prototype=Object.assign(Object.create(e.prototype),{constructor:o,add:function(i){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}i instanceof t&&(i.material.depthTest=!1),e.prototype.add.call(this,i)},createGeometry:function(e,t){return new s.PlaneBufferGeometry(e,e*t)},createMaterial:function(e){const t=Object.assign({},n),i=t.uniforms;return i.zoom.value=e,i.opacity.value=0,new s.ShaderMaterial({uniforms:i,vertexShader:t.vertexShader,fragmentShader:t.fragmentShader,side:s.BackSide,transparent:!0})},registerMouseEvents:function(){this.container.addEventListener("mousedown",this.onMouseDown.bind(this),{passive:!0}),this.container.addEventListener("mousemove",this.onMouseMove.bind(this),{passive:!0}),this.container.addEventListener("mouseup",this.onMouseUp.bind(this),{passive:!0}),this.container.addEventListener("touchstart",this.onMouseDown.bind(this),{passive:!0}),this.container.addEventListener("touchmove",this.onMouseMove.bind(this),{passive:!0}),this.container.addEventListener("touchend",this.onMouseUp.bind(this),{passive:!0}),this.container.addEventListener("mousewheel",this.onMouseWheel.bind(this),{passive:!1}),this.container.addEventListener("DOMMouseScroll",this.onMouseWheel.bind(this),{passive:!1}),this.container.addEventListener("contextmenu",this.onContextMenu.bind(this),{passive:!0})},unregisterMouseEvents:function(){this.container.removeEventListener("mousedown",this.onMouseDown.bind(this),!1),this.container.removeEventListener("mousemove",this.onMouseMove.bind(this),!1),this.container.removeEventListener("mouseup",this.onMouseUp.bind(this),!1),this.container.removeEventListener("touchstart",this.onMouseDown.bind(this),!1),this.container.removeEventListener("touchmove",this.onMouseMove.bind(this),!1),this.container.removeEventListener("touchend",this.onMouseUp.bind(this),!1),this.container.removeEventListener("mousewheel",this.onMouseWheel.bind(this),!1),this.container.removeEventListener("DOMMouseScroll",this.onMouseWheel.bind(this),!1),this.container.removeEventListener("contextmenu",this.onContextMenu.bind(this),!1)},onMouseDown:function(e){switch(e.touches&&e.touches.length||1){case 1:const t=e.clientX>=0?e.clientX:e.touches[0].clientX,i=e.clientY>=0?e.clientY:e.touches[0].clientY;this.dragging=!0,this.userMouse.set(t,i);break;case 2:const n=e.touches[0].pageX-e.touches[1].pageX,s=e.touches[0].pageY-e.touches[1].pageY,o=Math.sqrt(n*n+s*s);this.userMouse.pinchDistance=o}this.onUpdateCallback()},onMouseMove:function(e){switch(e.touches&&e.touches.length||1){case 1:const t=e.clientX>=0?e.clientX:e.touches[0].clientX,i=e.clientY>=0?e.clientY:e.touches[0].clientY,n=.4*s.Math.degToRad(t-this.userMouse.x),o=.4*s.Math.degToRad(i-this.userMouse.y);this.dragging&&(this.quatA.setFromAxisAngle(this.vectorY,n),this.quatB.setFromAxisAngle(this.vectorX,o),this.quatCur.multiply(this.quatA).multiply(this.quatB),this.userMouse.set(t,i));break;case 2:const a=e.touches[0].pageX-e.touches[1].pageX,h=e.touches[0].pageY-e.touches[1].pageY,r=Math.sqrt(a*a+h*h);this.addZoomDelta(this.userMouse.pinchDistance-r)}},onMouseUp:function(){this.dragging=!1},onMouseWheel:function(e){e.preventDefault(),e.stopPropagation();let t=0;void 0!==e.wheelDelta?t=e.wheelDelta:void 0!==e.detail&&(t=-e.detail),this.addZoomDelta(t),this.onUpdateCallback()},addZoomDelta:function(e){const t=this.material.uniforms,i=.1*this.size,n=10*this.size;t.zoom.value+=e,t.zoom.value<=i?t.zoom.value=i:t.zoom.value>=n&&(t.zoom.value=n)},onUpdateCallback:function(){this.frameId=window.requestAnimationFrame(this.onUpdateCallback.bind(this)),this.quatSlerp.slerp(this.quatCur,.1),this.material&&this.material.uniforms.transform.value.makeRotationFromQuaternion(this.quatSlerp),!this.dragging&&1-this.quatSlerp.clone().dot(this.quatCur)<this.EPS&&window.cancelAnimationFrame(this.frameId)},reset:function(){this.quatCur.set(0,0,0,1),this.quatSlerp.set(0,0,0,1),this.onUpdateCallback()},onLoad:function(t){this.material.uniforms.resolution.value=this.container.clientWidth/this.container.clientHeight,this.registerMouseEvents(),this.onUpdateCallback(),this.dispatchEvent({type:"panolens-viewer-handler",method:"disableControl"}),e.prototype.onLoad.call(this,t)},onLeave:function(){this.unregisterMouseEvents(),this.dispatchEvent({type:"panolens-viewer-handler",method:"enableControl",data:i.CONTROLS.ORBIT}),window.cancelAnimationFrame(this.frameId),e.prototype.onLeave.call(this)},onWindowResize:function(){this.material.uniforms.resolution.value=this.container.clientWidth/this.container.clientHeight},onContextMenu:function(){this.dragging=!1},dispose:function(){this.unregisterMouseEvents(),e.prototype.dispose.call(this)}}),o});
//# sourceMappingURL=../sourcemaps/panorama/LittlePlanet.js.map
